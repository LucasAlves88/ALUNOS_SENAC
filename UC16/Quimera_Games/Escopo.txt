Escopo
 
üéØ Escopo do Projeto: Site de Vendas de Jogos
üîß Tecnologias Utilizadas
Frontend: HTML, CSS, JavaScript
Backend: PHP
Banco de Dados: SQL Server
üóÇÔ∏è M√≥dulos e Funcionalidades
1. Tela Inicial
Apresenta√ß√£o visual atrativa com destaques de jogos (banner/carrossel)
Bot√µes de Login e Cadastro
Menu de navega√ß√£o com links: In√≠cio | Categorias | Biblioteca | Avalia√ß√µes | Suporte | Sobre N√≥s
2. Sistema de Cadastro e Login
Cadastro de usu√°rio (nome, e-mail, senha, data nascimento etc.)
Login com verifica√ß√£o no banco de dados
Sess√µes PHP para manter usu√°rio logado
Valida√ß√µes com JavaScript e PHP
3. Categorias de Jogos
Lista de categorias (Ex: A√ß√£o, Aventura, RPG, Corrida etc.)
Cada categoria exibe os jogos relacionados
Filtro por categoria com JavaScript (din√¢mico)
4. P√°gina de Vendas dos Jogos
Listagem de jogos com:
Capa do jogo
Nome
Pre√ßo
Bot√£o "Adicionar √† Biblioteca"
P√°gina individual do jogo com:
Descri√ß√£o detalhada
Requisitos m√≠nimos e recomendados do sistema
Screenshots e v√≠deos (embed YouTube opcional)
Avalia√ß√µes e coment√°rios de usu√°rios
Sistema de pagamento simulado (n√£o real)
5. Biblioteca de Jogos do Usu√°rio
Exibi√ß√£o dos jogos adquiridos pelo usu√°rio
Filtragem e busca por t√≠tulo
Links para visualizar novamente os detalhes ou reinstalar
6. Sistema de Avalia√ß√£o
Usu√°rio pode avaliar jogos (1 a 5 estrelas) e deixar coment√°rios
Exibi√ß√£o da m√©dia de avalia√ß√µes na p√°gina do jogo
Avalia√ß√µes listadas com data, nome do usu√°rio e coment√°rio
7. Sistema de Suporte
P√°gina com formul√°rio de contato:
Nome
E-mail
Categoria (Problema t√©cnico, D√∫vida, Sugest√£o)
Mensagem
Armazenamento das mensagens no banco de dados
Exibi√ß√£o para administradores
8. Barra de Pesquisa
Campo de busca no topo do site
Pesquisa em tempo real com JavaScript e AJAX (opcional)
Resultados din√¢micos por nome do jogo
9. P√°gina ‚ÄúSobre N√≥s‚Äù
Informa√ß√µes sobre a empresa ou equipe do projeto
Miss√£o, vis√£o, valores
Redes sociais ou contato
üóÉÔ∏è Modelagem de Banco de Dados (SQL Server)
Tabelas principais:
usuarios (id, nome, email, senha, tipo_usuario, data_cadastro)
jogos (id, nome, descricao, preco, requisitos_min, requisitos_rec, categoria_id, imagem_url, data_lancamento)
categorias (id, nome)
biblioteca (id, usuario_id, jogo_id, data_compra)
avaliacoes (id, usuario_id, jogo_id, nota, comentario, data)
suporte (id, usuario_id, categoria, mensagem, data)
üîÅ Fluxo do Usu√°rio
Acessa a tela inicial
Realiza cadastro ou login
Navega pelas categorias ou pesquisa por jogos
Visualiza detalhes de um jogo
Compra o jogo (simulado)
Jogo aparece na biblioteca
Pode avaliar o jogo
Pode entrar em contato via suporte
üé® Design e Responsividade
Layout responsivo com CSS (Flexbox, Grid)
Design mobile-first
Temas de cores baseados em jogos (ex: tons escuros, imagens de fundo)
Uso de √≠cones (Font Awesome ou similar)
üìà Poss√≠veis Funcionalidades Futuras
Carrinho de compras real
Integra√ß√£o com gateway de pagamento
Sistema de conquistas para usu√°rios
Painel administrativo para gerenciar jogos, usu√°rios e suporte
 üéØ Escopo do Projeto: Sorteador de Jogos Offline
üõ†Ô∏è Objetivo Geral
Criar um aplicativo/offline em PHP (com interface HTML/CSS/JavaScript) que sorteie jogos com base:
Na categoria de jogos escolhida
No ID da conta do usu√°rio (vinculada ao sistema web)
Ou que sorteie todos os jogos dispon√≠veis na web por categoria
üß± Tecnologias Utilizadas
Frontend: HTML + CSS + JavaScript
Backend: PHP
Fonte de Dados: Arquivo SQL  SERVER exportado da vers√£o web
üì¶ Funcionalidades
1. Tela Inicial
Interface simples e leve
Campos de:
Sele√ß√£o de categoria (ComboBox)
Campo para digitar o ID da conta
Bot√£o para sortear
Resultados apresentados na mesma tela
2. Modo de Sorteio
Por categoria: o usu√°rio escolhe uma categoria e clica em "Sortear"
Por ID da conta: o sistema carrega os jogos da biblioteca daquele usu√°rio e sorteia um aleatoriamente
Sortear todos os jogos da web por categoria: op√ß√£o extra que busca no arquivo com todos os jogos web, filtrando por categoria
3. Fonte de Dados
O sistema deve usar arquivos locais:
jogos.json ou jogos.csv contendo: id, nome, categoria, requisitos, etc.
usuarios.json ou usuarios.csv contendo: id_usuario, nome, jogos_adquiridos (lista de IDs)
PHP faz o parsing dos arquivos e executa os sorteios com base nos filtros
4. Resultado do Sorteio
Exibe:
Nome do jogo
Categoria
Capa (caso tenha link salvo)
Requisitos m√≠nimos
Bot√£o "Sortear novamente"
5. Valida√ß√µes
Verifica se o ID digitado existe
Verifica se existem jogos na categoria escolhida
Se n√£o houver jogos suficientes, exibe mensagem personalizada
üîÑ Fluxo do Usu√°rio
Abre o app localmente (navegador)
Seleciona modo de sorteio:
Por categoria
Por ID
Todos os jogos por categoria
Sistema busca nos dados locais (JSON ou CSV)
Exibe o jogo sorteado
Usu√°rio pode sortear novamente ou mudar filtro
Funcionalidades Futuras (Extras)
Anima√ß√£o de sorteio com JavaScript
Sistema de favoritos
Salvar o hist√≥rico de sorteios
Exportar resultados para PDF